plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id("com.palantir.docker") version "0.35.0"
}

group = 'com.snowlightpay.money'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
}

ext {
    axonVersion = "4.8.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'com.mysql:mysql-connector-j:8.1.0'
//    runtimeOnly 'com.h2database:h2:2.2.220'

    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation project(path: ':common')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
    implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2:2.2.220'
}

test {
    useJUnitPlatform()
}

docker {
    println(tasks.bootJar.outputs.files)

    // 이미지 이름
    name rootProject.name+'-'+project.name+':'+version
    // 어떤 도커 파일
    dockerfile file('../Dockerfile')
    // 어떤 파일들을 도커 이미지로 복사
    files tasks.bootJar.outputs.files
    // 도커 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}